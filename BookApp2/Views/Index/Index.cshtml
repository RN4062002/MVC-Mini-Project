@model Model.BooksModel

@{
    ViewBag.Title = "Index";
}
<head>
    <script src="~/Scripts/index.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.css" />
</head>
<style>
    .multiselect select {
        width: auto;
        min-width: 150px; /* Adjust width as needed */
    }

    .selectBox {
        position: relative;
        margin-bottom: 5px;
    }

        .selectBox select {
            width: 100%;
            font-weight: bold;
            height: 30px;
        }

    .overSelect {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
    }

    .check {
        display: none;
        position: absolute;
        border: 1px #dadada solid;
        width: 306px;
        background-color: white;
    }

        .check label {
            display: block;
        }

            .check label:hover {
                background-color: #1e90ff;
            }

    #Dropdown {
        width: 110px;
        height: inherit;
        margin-top: 14px;
        margin-left: 63px;
    }
</style>



<p id="xyz" data-page-number="@Model.PageNumber">  </p>

<div class="container">

    <h2 style="margin-left:90rem">BookGetList</h2>
    @Html.ActionLink("Add Book on newPage", "Create", new { @class = "btn btn-primary btn-sm " }, new { @class = "btn btn-primary btn-sm", @id = "Insert" })
    <input class="btn btn-primary btn-sm " data-toggle="model" type="button" id="create" value="new Book On Popup" />
</div>
<br />

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "searchForm" }))
{
    <div class="container" style="display:flex">
        <div>
            <label>Search Book</label>
            @Html.TextBoxFor(m => m.BookName, null, new { placeholder = "Enter search term", @class = "form-control", @style = "height: 3rem" }) &nbsp; &nbsp;
        </div>
        <!-- Multi select dropdown of Publisher -->
        <div class="multiselect Filter " style="margin-left:2rem">
            <label>Search Publisher</label>
            <div class="selectBox" onclick="showCheckboxes()">
                <select class="form-control" id="MultiPublisherIDList">
                    <option>Select Multiple Publisher</option>
                </select>
                <div class="overSelect"></div>
            </div>
            <div id="checkboxes" class="position-absolute check">

                @for (int i = 0; i < Model.PublishersList.Count(); i++)
                {
                <label for="@Model.PublishersList.ElementAt(i).PublisherID">
                    &nbsp;<input type="checkbox" value="@Model.PublishersList.ElementAt(i).PublisherID" name="MultiPublisherIDList" id="@Model.PublishersList.ElementAt(i).PublisherID" /> &nbsp;&nbsp;&nbsp;@Model.PublishersList.ElementAt(i).PublisherName
                </label>
                }

            </div>
        </div>
        <!-- Multi select dropdown of Author -->
        <div class="multiselect Filter " style="margin-left:2rem; margin-right:2rem">
            <label>Search Author</label>
            <div class="selectBox" onclick="authorCheckBoxes()">
                <select class="form-control">
                    <option>Select Multiple Publisher</option>
                </select>
                <div class="overSelect"></div>
            </div>
            <div id="authorcheckboxes" class="position-absolute check">

                @for (int i = 0; i < Model.AuthorsList.Count(); i++)
                {
                <label for="@Model.AuthorsList.ElementAt(i).AuthorID">
                    &nbsp;<input type="checkbox" value="@Model.AuthorsList.ElementAt(i).AuthorID" name="MultiAuthorIDList" id="@Model.AuthorsList.ElementAt(i).AuthorID" /> &nbsp;&nbsp;&nbsp;@Model.AuthorsList.ElementAt(i).AuthorName
                </label>
                }
            </div>
        </div>
        <!-- form Buttons -->
        <div style="margin-top:2.2rem">
            <button type="submit" class="btn btn-info">search</button> &nbsp;
            <button type="button" id="clear" class="btn btn-danger">clear</button>
        </div>

    </div>
    <div class="container">
        @Html.DropDownListFor(m => m.PageSize, new SelectList(new[] { 5, 10, 15, 20 }), "-select-", new { @id = "PageSize" })
        <label id="displayResult"></label>
    </div>


}

<!-- Modal -->
<div class="modal fade" id="addBookModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="margin-left:-276px">
        <div class="modal-content">
            <div class="modal-body" id="addBookContainer">
                ...
            </div>
        </div>
    </div>
</div>

<div class="container">
    <table class="table table-bordered table-responsive table-striped">
        <tr style="background-color:aliceblue; ">
            <th class="text-center">BookID</th>
            <th class="text-center">BookName</th>
            <th class="text-center">BookPrice</th>
            <th class="text-center">BookStock</th>
            <th class="text-center">Publisher Name</th>
            <th class="text-center">Author Name</th>
            <th class="text-center">Actions</th>
        </tr>
        <tbody id="tbody">
            @*@foreach (var data in Model.bookList)
                {
                    <tr>
                        <th>@data.BookID</th>
                        <th>@data.BookName</th>
                        <th>@data.BookPrice</th>
                        <th>@data.BookStock</th>
                        <th>@data.PublisherName</th>
                        <th>@data.AuthorName</th>
                        <th>
                            @Html.ActionLink("Edit", "Edit", new { id = data.BookID }, new { @class = "btn btn-primary btn-sm" })
                            @Html.ActionLink("Delete", "Delete", new { id = data.BookID }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you sure you want to delete this book?')" })
                        </th>
                    </tr>
                }*@
        </tbody>
    </table>
</div>

<nav aria-label="Page navigation example">
    @*<ul class="pagination">
            @if (Model.PageNumber > 1)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { PageNumber = Model.PageNumber - 1, BookName = Request["BookName"], PageSize = Request["PageSize"] })">Previous</a></li>
            }
            @if (Model.PageNumber > 1)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { PageNumber = Model.PageNumber - 1, BookName = Request["BookName"], PageSize = Request["PageSize"] })">@((Model.PageNumber - 1))</a></li>
            }
            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new {PageNumber = Model.PageNumber    })">@Model.PageNumber</a></li>
            @if (Model.PageNumber < Model.couter)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new {PageNumber = Model.PageNumber + 1})">@((Model.PageNumber + 1))</a></li>
            }
            @if (Model.PageNumber < Model.couter)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Index", new {PageNumber = Model.PageNumber + 1})">Next</a></li>
            }
        </ul>*@
</nav>

<div class="container">
    <ul id="pagination" class="pagination"></ul>
</div>
